[tst]
label = tst
protocol = traxpython

command = stark_st50_ar

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/pytracking/AR/pytracking/VOT2020_super_only_mask_384_HP

# Additional environment paths
#env_PATH = /miniconda3/envs/transt/bin/python3.7/;${PATH}

[Ours]
label = Ours
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/

# Additional environment paths
#env_PATH = <additional-env-paths>;${PATH}
[STARK-S50]
label = STARK-S50
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/


[SiamFC]
label = SiamFC
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/


[UPDT]
label = UPDT
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/

[DiMP]
label = DiMP
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/

[ATOM]
label = ATOM
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/

[CSRDCF]
label = CSRDCF
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/

[KCF]
label = KCF
protocol = traxpython

command = import pytracking.run_vot as run_vot; run_vot.run_vot2020('transt', 'transt987')

# Specify a path to trax python wrapper if it is not visible (separate by ; if using multiple paths)
paths = /root/code/TransT/

